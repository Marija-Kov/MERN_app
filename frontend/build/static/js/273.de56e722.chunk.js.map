{"version":3,"file":"static/js/273.de56e722.chunk.js","mappings":"6OAIe,SAASA,EAAYC,GAClC,MCDa,WACb,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SACAE,GAASC,EAAAA,EAAAA,KAATD,KACR,EAA0BE,EAAAA,SAAe,MAAK,eAAvCC,EAAK,KAAEC,EAAQ,KAEhBC,EAAW,yCAAG,WAAOC,EAAIC,EAASC,GAAS,iFACzCR,EAAK,CAAD,eAC2B,OAAlCI,EAAS,yBAAyB,0CAGfK,MAAM,GAAD,OACvBC,wBAAyB,yBAAiBJ,GAC7C,CACEK,OAAQ,QACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYhB,EAAKiB,UAGlC,KAAD,EAVa,OAARC,EAAQ,gBAWKA,EAASC,OAAO,KAAD,EAAxB,GAAJA,EAAI,OACDD,EAASE,GAAG,CAAD,gBAC+B,OAA7ChB,EAAS,oCAAoC,2BAG3Cc,EAASE,KACXhB,EAAS,MACTI,IACAV,EAAS,CAAEuB,KAAM,aAAcd,QAASY,KACzC,4CACL,gBA1BgB,0CA4BjB,MAAO,CAACd,YAAAA,EAAaF,MAAAA,EACvB,CDjC+BmB,GAAtBjB,EAAW,EAAXA,YAAaF,EAAK,EAALA,MACdoB,EAAQrB,EAAAA,SACRsB,EAAOtB,EAAAA,SACPuB,EAAOvB,EAAAA,SACb,EAAsCA,EAAAA,SAAe,IAAG,eAAjDwB,EAAW,KAAEC,EAAc,KAE7BC,EAAgB,WAAH,OAAS/B,EAAMgC,UAAW,EACvCC,EAAY,yCAAG,WAAOC,GAAC,sEAUzB,OATFA,EAAEC,iBACKT,GACJI,GAAe,SAAAM,GAAI,OAAK,SAAO,eAAKA,GAAI,IAErCT,GACHG,GAAe,SAAAM,GAAI,OAAK,QAAM,eAAKA,GAAI,IAEd,OAAvBR,GACFE,GAAe,SAACM,GAAI,OAAM,QAAM,eAAKA,GAAI,IAC1C,SACI5B,EACJR,EAAMS,GACN,CACEiB,MAAOA,EAAMW,QAAQC,MAAMC,OAAOC,cAClCb,KAAMA,EAAKU,QAAQC,MACnBV,KAAMA,EAAKS,QAAQC,OAErBP,GACA,KAAD,sCACF,gBApBiB,sCAqBf,OACE,gBAAKU,UAAU,uCAAsC,UACnD,kBACEA,UAAU,aACV,4BAAoBzC,EAAM0B,MAAK,YAC7B1B,EAAM0C,UAAS,kBACA1C,EAAM0C,WAAS,kBACf1C,EAAM2C,YACpB,WAEH,mBACE,aAAW,aACXF,UAAU,kCACVG,QAAS,kBAAM5C,EAAMgC,UAAU,EAAC,SACjC,WAGD,wBAAI,kBACJ,2BAAO,qBACP,kBACER,KAAK,OACLqB,KAAK,QACLpC,GAAG,QACH,aAAW,gBACXqC,aAAc9C,EAAM0B,MACpBqB,IAAKrB,EACLe,UAAWZ,EAAYmB,SAAS,SAAW,QAAU,MAEvD,2BAAO,qBACP,kBACExB,KAAK,SACLqB,KAAK,OACLpC,GAAG,OACH,aAAW,iBACXqC,aAAc9C,EAAM2B,KACpBoB,IAAKpB,EACLc,UAAWZ,EAAYmB,SAAS,QAAU,QAAU,MAEtD,2BAAO,gBACP,kBACExB,KAAK,SACLqB,KAAK,OACLpC,GAAG,OACH,aAAW,aACXqC,aAAc9C,EAAM4B,KACpBmB,IAAKnB,EACLa,UAAWZ,EAAYmB,SAAS,QAAU,QAAU,MAEtD,mBACEP,UAAU,kBACVG,QAAS,SAACV,GAAC,OAAKD,EAAaC,EAAE,EAC/B,aAAW,+BAA8B,SAC1C,iBAGA5B,IACC,gBAAK2C,KAAK,QAAQR,UAAU,QAAO,SAChCnC,QAMf,C","sources":["components/EditWorkout.js","hooks/useEditWorkout.js"],"sourcesContent":["import React from 'react';\nimport useEditWorkout from '../hooks/useEditWorkout';\n\n\nexport default function EditWorkout(props){\n  const {editWorkout, error} = useEditWorkout();\n  const title = React.useRef();\n  const reps = React.useRef();\n  const load = React.useRef();\n  const [emptyFields, setEmptyFields] = React.useState([]);\n\n const closeEditForm = () => props.showEdit();\n const handleUpdate = async (e) => {    \n   e.preventDefault();\n     if (!title){\n      setEmptyFields(prev => ['title', ...prev])\n    }\n    if (!reps){\n      setEmptyFields(prev => ['reps', ...prev])\n    }\n    if (load === (undefined || null)) {\n      setEmptyFields((prev) => [\"load\", ...prev]);\n    }\n   await editWorkout(\n     props.id,\n     {\n       title: title.current.value.trim().toLowerCase(),\n       reps: reps.current.value,\n       load: load.current.value,\n     },\n     closeEditForm\n   ); \n }\n    return (\n      <div className=\"form--container--edit--workout--form\">\n        <form\n          className=\"edit--form\"\n          aria-label={`edit ${props.title} ${\n            props.updatedAt\n              ? `updated ${props.updatedAt}`\n              : `created ${props.createdAt}`\n          }`}\n        >\n          <button\n            aria-label=\"close form\"\n            className=\"close material-symbols-outlined\"\n            onClick={() => props.showEdit()}\n          >\n            close\n          </button>\n          <h4>Edit workout</h4>\n          <label>exercise title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            aria-label=\"workout title\"\n            defaultValue={props.title}\n            ref={title}\n            className={emptyFields.includes(\"title\") ? \"error\" : \"\"}\n          />\n          <label>number of reps:</label>\n          <input\n            type=\"number\"\n            name=\"reps\"\n            id=\"reps\"\n            aria-label=\"number of reps\"\n            defaultValue={props.reps}\n            ref={reps}\n            className={emptyFields.includes(\"reps\") ? \"error\" : \"\"}\n          />\n          <label>load (kg):</label>\n          <input\n            type=\"number\"\n            name=\"load\"\n            id=\"load\"\n            aria-label=\"load in kg\"\n            defaultValue={props.load}\n            ref={load}\n            className={emptyFields.includes(\"load\") ? \"error\" : \"\"}\n          />\n          <button\n            className=\"edit--form--btn\"\n            onClick={(e) => handleUpdate(e)}\n            aria-label=\"submit edited workout button\"\n          >\n            Save changes\n          </button>\n          {error && (\n            <div role=\"alert\" className=\"error\">\n              {error}\n            </div>\n          )}\n        </form>\n      </div>\n    );\n}","import React from 'react'\nimport { useWorkoutContext } from \"../hooks/useWorkoutContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\n\nexport default function useEditWorkout() {\n  const { dispatch } = useWorkoutContext();\n  const { user } = useAuthContext();\n  const [error, setError] = React.useState(null);\n  \n  const editWorkout = async (id, payload, closeEdit) => {\n     if (!user) {\n       setError(\"You must be logged in\");\n       return;\n     }\n   const response = await fetch(\n     `${process.env.REACT_APP_API}/api/workouts/${id}`,\n     {\n       method: \"PATCH\",\n       body: JSON.stringify(payload),\n       headers: {\n         \"Content-Type\": \"application/json\",\n         Authorization: `Bearer ${user.token}`,\n       },\n     }\n   );\n   const json = await response.json(); \n       if (!response.ok) {\n         setError(\"Please fill out the empty fields\");\n         return\n       }\n       if (response.ok) {\n         setError(null)\n         closeEdit()\n         dispatch({ type: \"UPDATE_ONE\", payload: json });\n       }\n  }\n\n  return {editWorkout, error}\n}\n"],"names":["EditWorkout","props","dispatch","useWorkoutContext","user","useAuthContext","React","error","setError","editWorkout","id","payload","closeEdit","fetch","process","method","body","JSON","stringify","headers","Authorization","token","response","json","ok","type","useEditWorkout","title","reps","load","emptyFields","setEmptyFields","closeEditForm","showEdit","handleUpdate","e","preventDefault","prev","current","value","trim","toLowerCase","className","updatedAt","createdAt","onClick","name","defaultValue","ref","includes","role"],"sourceRoot":""}