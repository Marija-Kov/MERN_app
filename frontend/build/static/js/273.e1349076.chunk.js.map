{"version":3,"file":"static/js/273.e1349076.chunk.js","mappings":"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","sources":["components/EditWorkout.js","hooks/useEditWorkout.js"],"sourcesContent":["import React from 'react';\nimport useEditWorkout from '../hooks/useEditWorkout';\n\n\nexport default function EditWorkout(props){\n  const {editWorkout, error} = useEditWorkout();\n  const [title, setTitle] = React.useState(props.title);\n  const [reps, setReps] = React.useState(props.reps);\n  const [load, setLoad] = React.useState(props.load);\n  const [emptyFields, setEmptyFields] = React.useState([]);\n\n const closeEditForm = () => props.showEdit();\n const handleUpdate = async (e) => {    \n   e.preventDefault();\n     if (!title){\n      setEmptyFields(prev => ['title', ...prev])\n    }\n    if (!reps){\n      setEmptyFields(prev => ['reps', ...prev])\n    }\n    if (load === (undefined || null)) {\n      setEmptyFields((prev) => [\"load\", ...prev]);\n    }\n   await editWorkout(\n     props.id,\n     {\n       title: title.trim().toLowerCase(),\n       reps: reps,\n       load: load,\n     },\n     closeEditForm\n   ); \n }\n    return (\n      <div className=\"form--container\">\n        <form\n          className=\"edit--form\"\n          aria-label={`edit ${props.title} ${\n            props.updatedAt\n              ? `updated ${props.updatedAt}`\n              : `created ${props.createdAt}`\n          }`}\n        >\n          <button\n            aria-label=\"close form\"\n            className=\"close material-symbols-outlined\"\n            onClick={() => props.showEdit()}\n          >\n            close\n          </button>\n          <h4>Edit workout</h4>\n          <label>exercise title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            aria-label=\"workout title\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            className={emptyFields.includes(\"title\") ? \"error\" : \"\"}\n          />\n          <label>number of reps:</label>\n          <input\n            type=\"number\"\n            name=\"reps\"\n            id=\"reps\"\n            aria-label=\"number of reps\"\n            onChange={(e) => setReps(e.target.value)}\n            value={reps}\n            className={emptyFields.includes(\"reps\") ? \"error\" : \"\"}\n          />\n          <label>load (kg):</label>\n          <input\n            type=\"number\"\n            name=\"load\"\n            id=\"load\"\n            aria-label=\"load in kg\"\n            onChange={(e) => setLoad(e.target.value)}\n            value={load}\n            className={emptyFields.includes(\"load\") ? \"error\" : \"\"}\n          />\n          <button\n            className=\"edit--form--btn\"\n            onClick={(e) => handleUpdate(e)}\n            aria-label=\"submit edited workout button\"\n          >\n            Save changes\n          </button>\n          {error && (\n            <div role=\"alert\" className=\"error\">\n              {error}\n            </div>\n          )}\n        </form>\n      </div>\n    );\n}","import React from 'react'\nimport { useWorkoutContext } from \"../hooks/useWorkoutContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\n\nexport default function useEditWorkout() {\n  const { dispatch } = useWorkoutContext();\n  const { user } = useAuthContext();\n  const [error, setError] = React.useState(null);\n  \n  const editWorkout = async (id, payload, closeEdit) => {\n     if (!user) {\n       setError(\"You must be logged in\");\n       return;\n     }\n   const response = await fetch(\n     `${process.env.REACT_APP_API}/api/workouts/${id}`,\n     {\n       method: \"PATCH\",\n       body: JSON.stringify(payload),\n       headers: {\n         \"Content-Type\": \"application/json\",\n         Authorization: `Bearer ${user.token}`,\n       },\n     }\n   );\n   const json = await response.json(); \n       if (!response.ok) {\n         setError(\"Please fill out the empty fields\");\n         return\n       }\n       if (response.ok) {\n         setError(null)\n         closeEdit()\n         dispatch({ type: \"UPDATE_ONE\", payload: json });\n       }\n  }\n\n  return {editWorkout, error}\n}\n"],"names":["EditWorkout","props","dispatch","useWorkoutContext","user","useAuthContext","React","error","setError","editWorkout","id","payload","closeEdit","fetch","process","method","body","JSON","stringify","headers","Authorization","token","response","json","ok","type","useEditWorkout","title","setTitle","reps","setReps","load","setLoad","emptyFields","setEmptyFields","closeEditForm","showEdit","handleUpdate","e","preventDefault","prev","trim","toLowerCase","className","updatedAt","createdAt","onClick","name","onChange","target","value","includes","role"],"sourceRoot":""}