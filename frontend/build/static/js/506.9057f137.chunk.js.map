{"version":3,"file":"static/js/506.9057f137.chunk.js","mappings":"yNAIe,SAASA,IACpB,MCHW,WACX,MAA0BC,EAAAA,SAAe,MAAK,eAAvCC,EAAK,KAAEC,EAAQ,KACtB,EAA8BF,EAAAA,SAAe,MAAK,eAA3CG,EAAO,KAAEC,EAAU,KAEpBC,EAAa,yCAAG,WAAOC,EAAOC,EAAUC,GAAe,8FACpCC,MAAM,sBAAD,OAAuBH,GAAS,CAC1DI,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CACnBN,SAAUA,EACVC,gBAAiBA,IAEnBM,QAAS,CACP,eAAgB,sBAEjB,KAAD,EATY,OAARC,EAAQ,gBAUKA,EAASC,OAAO,KAAD,EAA5BA,EAAI,OACLD,EAASE,GAEHF,EAASE,KAClBb,EAAWY,EAAKb,SAChBD,EAAS,OAHTA,EAASc,EAAKf,OAIf,2CACF,gBAlBkB,0CAoBrB,MAAO,CAAEI,cAAAA,EAAeJ,MAAAA,EAAOE,QAAAA,EACjC,CDtB8Ce,GAAlCb,EAAa,EAAbA,cAAeJ,EAAK,EAALA,MAAOE,EAAO,EAAPA,QAC9B,EAAgCH,EAAAA,SAAe,IAAG,eAA3CO,EAAQ,KAAEY,EAAW,KAC5B,EAA8CnB,EAAAA,SAAe,IAAG,eAAzDQ,EAAe,KAAEY,EAAkB,KAC1C,EAA0BpB,EAAAA,SAAe,MAAK,eAAvCM,EAAK,KAAEe,EAAQ,KAEtBrB,EAAAA,WAAgB,WACd,IAAMsB,EAAQC,OAAOC,SAASC,KAAKC,QAAQ,KAAK,EAChDL,EAASE,OAAOC,SAASC,KAAKE,MAAML,GACtC,GAAG,IAEH,IAAMM,EAAY,yCAAG,WAAOC,GAAC,sEACR,OAAnBA,EAAEC,iBAAiB,SACbzB,EAAcC,EAAOC,EAAUC,GAAgB,2CACtD,gBAHiB,sCAIlB,OACE,gBAAKuB,UAAU,kBAAiB,UAC9B,kBAAMA,UAAU,kBAAkBC,SAAUJ,EAAa,WACvD,2BAAO,mBACP,kBACEK,KAAK,WACLC,GAAG,eACH,aAAW,eACXC,MAAO5B,EACP6B,SAAU,SAACP,GAAC,OAAKV,EAAYU,EAAEQ,OAAOF,MAAM,KAE9C,2BAAO,2BACP,kBACEF,KAAK,WACLC,GAAG,uBACH,aAAW,uBACXC,MAAO3B,EACP4B,SAAU,SAACP,GAAC,OAAKT,EAAmBS,EAAEQ,OAAOF,MAAM,KAEnDhC,IAAW,4BAAQ,SACpBF,IACC,iBAAKqC,KAAK,QAAQP,UAAU,QAAO,UAChC9B,EAAM,IACRA,EAAMsC,MAAM,cAAe,0BAAG,SAAC,KAAI,CAACC,GAAG,SAAQ,SAAC,YAAc,gCAGhErC,IACC,gBAAKmC,KAAK,QAAQP,UAAU,UAAS,SAClC5B,IAGJA,IACC,wBACE,SAAC,KAAI,CAACqC,GAAG,SAAQ,SAAC,iBAOhC,C","sources":["pages/ResetPassword.js","hooks/useResetPassword.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useResetPassword from '../hooks/useResetPassword';\n\nexport default function ResetPassword(){\n    const { resetPassword, error, success } = useResetPassword();\n    const [password, setPassword] = React.useState('');\n    const [confirmPassword, setConfirmPassword] = React.useState('');\n    const [token, setToken] = React.useState(null);\n\n    React.useEffect(()=> {\n      const start = window.location.href.indexOf('=')+1;\n      setToken(window.location.href.slice(start))\n    }, [])\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      await resetPassword(token, password, confirmPassword)\n    }\n    return (\n      <div className=\"form--container\">\n        <form className=\"reset--password\" onSubmit={handleSubmit}>\n          <label>New password:</label>\n          <input\n            type=\"password\"\n            id=\"new-password\"\n            aria-label=\"new password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <label>Confirm new password:</label>\n          <input\n            type=\"password\"\n            id=\"confirm-new-password\"\n            aria-label=\"confirm new password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          {!success && <button>Save</button>}\n          {error && (\n            <div role=\"alert\" className=\"error\">\n              {error}.\n            {error.match(/expired/i) && <p><Link to=\"/login\">Go back</Link> to resend the request.</p>}\n            </div>\n          )}\n          {success && (\n            <div role=\"alert\" className=\"success\">\n              {success}\n            </div>\n          )}\n          {success && (\n            <p>\n              <Link to=\"/login\">Log in</Link>\n            </p>\n          )}\n        </form>\n      </div>\n    );\n\n}","import React from 'react'\n\nexport default function useResetPassword() {\n    const [error, setError] = React.useState(null);\n    const [success, setSuccess] = React.useState(null);\n\n    const resetPassword = async (token, password, confirmPassword) => {\n      const response = await fetch(`api/reset-password/${token}`, {\n        method: \"PATCH\",\n        body: JSON.stringify({\n          password: password,\n          confirmPassword: confirmPassword,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setError(json.error);\n      } else if (response.ok) {\n        setSuccess(json.success);\n        setError(null);\n      }\n    };\n\n  return { resetPassword, error, success };\n}\n"],"names":["ResetPassword","React","error","setError","success","setSuccess","resetPassword","token","password","confirmPassword","fetch","method","body","JSON","stringify","headers","response","json","ok","useResetPassword","setPassword","setConfirmPassword","setToken","start","window","location","href","indexOf","slice","handleSubmit","e","preventDefault","className","onSubmit","type","id","value","onChange","target","role","match","to"],"sourceRoot":""}