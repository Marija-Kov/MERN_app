{"version":3,"file":"static/js/737.06c8d0b6.chunk.js","mappings":"+NAkEA,EA/De,WACX,MAAsCA,EAAAA,SAAe,CAACC,MAAM,GAAIC,SAAS,KAAI,eAAtEC,EAAW,KAAEC,EAAc,KAClC,ECHqB,WACrB,MAA0BJ,EAAAA,SAAe,MAAK,eAAvCK,EAAK,KAAEC,EAAQ,KACtB,EAAkCN,EAAAA,SAAe,MAAK,eAA/CO,EAAS,KAAEC,EAAY,KAC9B,EAAoDR,EAAAA,SAAe,MAAK,eAAjES,EAAkB,KAAEC,EAAqB,KAE1CC,EAAM,yCAAG,WAAOR,GAAW,8EAEd,OADfK,GAAa,GACbF,EAAS,MAAM,SACQM,MAAM,mBAAoB,CAC7CC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUd,KACvB,OAJY,OAARe,EAAQ,gBAKKA,EAASC,OAAO,KAAD,EAA5BA,EAAI,OAELD,EAASE,KACVZ,GAAa,GACbF,EAASa,EAAKd,OACdK,GAAsB,IAEtBQ,EAASE,KACTZ,GAAa,GACbF,EAAS,MACTI,GAAsB,IACzB,4CACJ,gBApBW,sCAsBb,MAAO,CAAEC,OAAAA,EAAQJ,UAAAA,EAAWF,MAAAA,EAAOI,mBAAAA,EACtC,CDzB2DY,GAAhDV,EAAM,EAANA,OAAQJ,EAAS,EAATA,UAAWF,EAAK,EAALA,MAAOI,EAAkB,EAAlBA,mBAE3Ba,EAAY,yCAAG,WAAOC,GAAC,sEACN,OAAnBA,EAAEC,iBAAiB,SACbb,EAAOR,GAAa,KAAD,sCAC5B,gBAHiB,sCAKZsB,EAAe,SAACF,GACpB,MAAwBA,EAAEG,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdxB,GAAe,SAACyB,GACd,OAAO,kBACFA,GAAI,cACNF,EAAOC,GAEZ,GACF,EAEA,OACI,iBAAKE,UAAU,kBAAiB,WAC9B,yBACE,oBAEF,kBAAM,aAAW,oBAAoBA,UAAU,SAASC,SAAUT,EAAa,WAC7E,wBAAI,uBACJ,2BAAO,oBACP,kBACEU,KAAK,OACLC,GAAG,QACHN,KAAK,QACLO,YAAY,gBACZ,aAAW,gBACXN,MAAOzB,EAAYF,MACnBkC,SAAUV,KAEZ,2BAAO,eACP,kBACEO,KAAK,WACLC,GAAG,WACHN,KAAK,WACLO,YAAY,WACZ,aAAW,WACXN,MAAOzB,EAAYD,SACnBiC,SAAUV,KAEZ,mBAAQK,UAAU,qBAAqBM,SAAU7B,EAAU,SAAC,YAC3DF,IACC,gBAAKgC,KAAK,QAAQP,UAAU,QAAO,SAChCzB,KAGHA,GAASI,IACT,gBAAK4B,KAAK,QAAQP,UAAU,UAAS,SAAC,4EASpD,C","sources":["pages/Signup.js","hooks/useSignup.js"],"sourcesContent":["import React from 'react';\nimport { useSignup } from '../hooks/useSignup';\n\nconst Signup = () => {\n    const [credentials, setCredentials] = React.useState({email:\"\", password:\"\"});\n    const {signup, isLoading, error, verificationNeeded} = useSignup();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await signup(credentials);\n    }\n\n    const handleChange = (e) => {\n      const { name, value } = e.target;\n      setCredentials((prev) => {\n        return {\n          ...prev,\n          [name]: value,\n        };\n      });\n    };\n\n    return (\n        <div className=\"form--container\">\n          <h1>\n            <p></p>\n          </h1>\n          <form aria-label=\"create an account\" className=\"signup\" onSubmit={handleSubmit}>\n            <h4>Create an account</h4>\n            <label>email address:</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"email address\"\n              aria-label=\"email address\"\n              value={credentials.email}\n              onChange={handleChange}\n            />\n            <label>password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              aria-label=\"password\"\n              value={credentials.password}\n              onChange={handleChange}\n            />\n            <button className=\"sign-up--form--btn\" disabled={isLoading}>Sign up</button>\n            {error && (\n              <div role=\"alert\" className=\"error\">\n                {error}\n              </div>\n            )}\n            {!error && verificationNeeded && (\n              <div role=\"alert\" className=\"success\">\n                Account created and pending confirmation. Please check your\n                inbox.\n              </div>\n            )}\n          </form>\n        </div>\n    );\n\n}\nexport default Signup;","import React from 'react';\n\nexport const useSignup = () => {\n    const [error, setError] = React.useState(null);\n    const [isLoading, setIsLoading] = React.useState(null); \n    const [verificationNeeded, setVerificationNeeded] = React.useState(null);\n\n    const signup = async (credentials) => {\n        setIsLoading(true);\n        setError(null);\n        const response = await fetch('api/users/signup', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(credentials)\n        })\n        const json = await response.json();\n\n        if (!response.ok){\n            setIsLoading(false);\n            setError(json.error);\n            setVerificationNeeded(false);\n        }\n        if (response.ok) {\n            setIsLoading(false)\n            setError(null);\n            setVerificationNeeded(true);\n        }\n    }\n\n   return { signup, isLoading, error, verificationNeeded } \n}\n\n\n\n\n\n"],"names":["React","email","password","credentials","setCredentials","error","setError","isLoading","setIsLoading","verificationNeeded","setVerificationNeeded","signup","fetch","method","headers","body","JSON","stringify","response","json","ok","useSignup","handleSubmit","e","preventDefault","handleChange","target","name","value","prev","className","onSubmit","type","id","placeholder","onChange","disabled","role"],"sourceRoot":""}